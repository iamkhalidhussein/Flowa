// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String        @id @default(uuid())
  clerkUserId String        @unique
  email       String        @unique
  name        String?
  imageUrl    String?
  transaction Transaction[]
  accounts    Account[]
  budgets     Budget[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("users")
}

model Account {
  id          String        @id @default(uuid())
  name        String
  type        AccountType
  currency    Currencies    @default(USD)
  balance     Decimal       @default(0) // will ask initial balance while creating an account
  isDefault   Boolean       @default(false)
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transaction Transaction[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([userId])
  @@map("accounts")
}

enum AccountType {
  CURRENT
  SAVINGS
}

enum Currencies {
  USD
  EUR
  JPY
  GBP
  AUD
  CAD
  CHF
  CNY
  HKD
  NZD
  SEK
  KRW
  SGD
  NOK
  MXN
  INR
  RUB
  ZAR
  TRY
  BRL
  TWD
  DKK
  PLN
  THB
  IDR
  HUF
  CZK
  ILS
  CLP
  PHP
  AED
  COP
  SAR
  MYR
  RON
  NGN
  BDT
  PKR
  EGP
  KWD
  QAR
  LKR
  DZD
  MAD
  VND
  UAH
  KZT
  BHD
  OMR
  JOD
  IRR
  IQD
  XOF
  XAF
  GHS
  TZS
  KES
  UGX
  AFN
  NPR
  MMK
  ETB
  MZN
  BWP
  ZMW
  AOA
  XCD
  BBD
  BZD
  BND
  FJD
  WST
  PGK
  MUR
  SCR
  MVR
  LAK
  KGS
  MDL
  MKD
  ISK
  BAM
  ALL
  RSD
  GEL
  TJS
  UZS
  MNT
  SYP
  SDG
  LYD
  YER
  MWK
  GNF
  LSL
  SZL
  SSP
  HTG
  SLL
  MGA
  CUP
  BSD
  SRD
  TTD
  JMD
  DOP
  PEN
  BOB
  PYG
  UYU
  VES
  XPF
  XDR
}

model Transaction {
  id                String             @id @default(uuid())
  type              TransactionType
  currency          Currencies         @default(USD)
  amount            Decimal
  description       String?
  date              DateTime
  category          String
  receiptUrl        String?
  isRecurring       Boolean            @default(false)
  recurringInterval RecurringInterval? // Only used if isRecurring is true
  nextRecurringDate DateTime? // Next date for recurring transaction
  lastProcessed     DateTime? // Last time this recurring transaction was processed
  status            TransactionStatus  @default(COMPLETED)
  userId            String
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  accountId         String
  account           Account            @relation(fields: [accountId], references: [id], onDelete: Cascade)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  @@index([userId])
  @@index([accountId])
  @@map("transactions")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum RecurringInterval {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

model Budget {
  id            String    @id @default(uuid())
  amount        Decimal
  lastAlertSent DateTime? // Track when the last alert was sent
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([userId])
  @@map("budgets")
}
